#!/bin/bash
jq 'del(.outbounds[] | select(.tag == "nodeSMyoutube"))' /opt/de_GWD/vtrui/config.json |\
jq 'del(.outbounds[] | select(.tag == "nodeSMnetflix"))' |\
jq 'del(.outbounds[] | select(.tag == "nodeSMhdh"))' |\
jq 'del(.outbounds[] | select(.tag == "nodeSMtvb"))' |\
jq 'del(.outbounds[] | select(.tag == "nodeSMbahamut"))' |\
jq 'del(.outbounds[] | select(.tag == "nodeSMopenai"))' |\
jq 'del(.outbounds[] | select(.tag == "nodeSMapple"))' |\
jq 'del(.routing.rules[] | select(.outboundTag == "nodeSMyoutube"))' |\
jq 'del(.routing.rules[] | select(.outboundTag == "nodeSMnetflix"))' |\
jq 'del(.routing.rules[] | select(.outboundTag == "nodeSMhdh"))' |\
jq 'del(.routing.rules[] | select(.outboundTag == "nodeSMtvb"))' |\
jq 'del(.routing.rules[] | select(.outboundTag == "nodeSMbahamut"))' |\
jq 'del(.routing.rules[] | select(.outboundTag == "nodeSMopenai"))' |\
jq 'del(.routing.rules[] | select(.outboundTag == "nodeSMapple"))' |\
jq 'del(.routing.rules[] | select(.domain == ["geosite:apple","geosite:apple-ads","geosite:apple-dev","geosite:apple-update","geosite:icloud","geosite:apple@cn","geosite:apple-cn"]))' |\
jq 'del(.routing.rules[] | select(.domain == ["domain:steamserver.net","geosite:steam@cn","geosite:category-games@cn"]))' | sponge /opt/de_GWD/vtrui/config.json



if [[ -n $2 ]] && [[ $2 != "0" ]]; then
nodeSMnumYoutube=$[$2-1]
address=$(jq -r --argjson nodecheck $nodeSMnumYoutube '.v2node | to_entries[] | select(.key == $nodecheck) | .value.domain' /opt/de_GWD/0conf)
tls=$(jq -r --argjson nodecheck $nodeSMnumYoutube '.v2node | to_entries[] | select(.key == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
uuid=$(jq -r --argjson nodecheck $nodeSMnumYoutube '.v2node | to_entries[] | select(.key == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
path=$(jq -r --argjson nodecheck $nodeSMnumYoutube '.v2node | to_entries[] | select(.key == $nodecheck) | .value.path' /opt/de_GWD/0conf)
jq --arg address $address '.v2nodeDIV.nodeSM.youtube=$address' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
tag="nodeSMyoutube"
routingDomain='["geosite:youtube"]'
/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
elif [[ $2 = "0" ]]; then
	jq 'del(.v2nodeDIV.nodeSM.youtube)' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
else
address=$(jq -r '.v2nodeDIV.nodeSM.youtube' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$')
	if [[ -n $address ]]; then
		tls=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
		uuid=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
		path=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.path' /opt/de_GWD/0conf)
		tag="nodeSMyoutube"
		routingDomain='["geosite:youtube"]'
		/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
		/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
	fi
fi

if [[ -n $3 ]] && [[ $3 != "0" ]]; then
nodeSMnumNetflix=$[$3-1]
address=$(jq -r --argjson nodecheck $nodeSMnumNetflix '.v2node | to_entries[] | select(.key == $nodecheck) | .value.domain' /opt/de_GWD/0conf)
tls=$(jq -r --argjson nodecheck $nodeSMnumNetflix '.v2node | to_entries[] | select(.key == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
uuid=$(jq -r --argjson nodecheck $nodeSMnumNetflix '.v2node | to_entries[] | select(.key == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
path=$(jq -r --argjson nodecheck $nodeSMnumNetflix '.v2node | to_entries[] | select(.key == $nodecheck) | .value.path' /opt/de_GWD/0conf)
jq --arg address $address '.v2nodeDIV.nodeSM.netflix=$address' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
tag="nodeSMnetflix"
routingDomain='["geosite:netflix"]'
/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
elif [[ $3 = "0" ]]; then
	jq 'del(.v2nodeDIV.nodeSM.netflix)' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
else
address=$(jq -r '.v2nodeDIV.nodeSM.netflix' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$')
	if [[ -n $address ]]; then
		tls=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
		uuid=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
		path=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.path' /opt/de_GWD/0conf)
		tag="nodeSMnetflix"
		routingDomain='["geosite:netflix"]'
		/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
		/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
	fi
fi

if [[ -n $4 ]] && [[ $4 != "0" ]]; then
nodeSMnumHDH=$[$4-1]
address=$(jq -r --argjson nodecheck $nodeSMnumHDH '.v2node | to_entries[] | select(.key == $nodecheck) | .value.domain' /opt/de_GWD/0conf)
tls=$(jq -r --argjson nodecheck $nodeSMnumHDH '.v2node | to_entries[] | select(.key == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
uuid=$(jq -r --argjson nodecheck $nodeSMnumHDH '.v2node | to_entries[] | select(.key == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
path=$(jq -r --argjson nodecheck $nodeSMnumHDH '.v2node | to_entries[] | select(.key == $nodecheck) | .value.path' /opt/de_GWD/0conf)
jq --arg address $address '.v2nodeDIV.nodeSM.hdh=$address' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
tag="nodeSMhdh"
routingDomain='["geosite:hbo","geosite:disney","geosite:hulu"]'
/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
elif [[ $4 = "0" ]]; then
	jq 'del(.v2nodeDIV.nodeSM.hdh)' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
else
address=$(jq -r '.v2nodeDIV.nodeSM.hdh' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$')
	if [[ -n $address ]]; then
		tls=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
		uuid=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
		path=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.path' /opt/de_GWD/0conf)
		tag="nodeSMhdh"
		routingDomain='["geosite:hbo","geosite:disney","geosite:hulu"]'
		/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
		/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
	fi
fi

if [[ -n $5 ]] && [[ $5 != "0" ]]; then
nodeSMnumTVB=$[$5-1]
address=$(jq -r --argjson nodecheck $nodeSMnumTVB '.v2node | to_entries[] | select(.key == $nodecheck) | .value.domain' /opt/de_GWD/0conf)
tls=$(jq -r --argjson nodecheck $nodeSMnumTVB '.v2node | to_entries[] | select(.key == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
uuid=$(jq -r --argjson nodecheck $nodeSMnumTVB '.v2node | to_entries[] | select(.key == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
path=$(jq -r --argjson nodecheck $nodeSMnumTVB '.v2node | to_entries[] | select(.key == $nodecheck) | .value.path' /opt/de_GWD/0conf)
jq --arg address $address '.v2nodeDIV.nodeSM.tvb=$address' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
tag="nodeSMtvb"
routingDomain='["geosite:tvb"]'
/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
elif [[ $5 = "0" ]]; then
	jq 'del(.v2nodeDIV.nodeSM.tvb)' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
else
address=$(jq -r '.v2nodeDIV.nodeSM.tvb' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$')
	if [[ -n $address ]]; then
		tls=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
		uuid=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
		path=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.path' /opt/de_GWD/0conf)
		tag="nodeSMtvb"
		routingDomain='["geosite:tvb"]'
		/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
		/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
	fi
fi

if [[ -n $6 ]] && [[ $6 != "0" ]]; then
nodeSMnumBahamut=$[$6-1]
address=$(jq -r --argjson nodecheck $nodeSMnumBahamut '.v2node | to_entries[] | select(.key == $nodecheck) | .value.domain' /opt/de_GWD/0conf)
tls=$(jq -r --argjson nodecheck $nodeSMnumBahamut '.v2node | to_entries[] | select(.key == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
uuid=$(jq -r --argjson nodecheck $nodeSMnumBahamut '.v2node | to_entries[] | select(.key == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
path=$(jq -r --argjson nodecheck $nodeSMnumBahamut '.v2node | to_entries[] | select(.key == $nodecheck) | .value.path' /opt/de_GWD/0conf)
jq --arg address $address '.v2nodeDIV.nodeSM.bahamut=$address' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
tag="nodeSMbahamut"
routingDomain='["geosite:bahamut"]'
/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
elif [[ $6 = "0" ]]; then
	jq 'del(.v2nodeDIV.nodeSM.bahamut)' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
else
address=$(jq -r '.v2nodeDIV.nodeSM.bahamut' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$')
	if [[ -n $address ]]; then
		tls=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
		uuid=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
		path=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.path' /opt/de_GWD/0conf)
		tag="nodeSMbahamut"
		routingDomain='["geosite:bahamut"]'
		/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
		/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
	fi
fi

if [[ -n $7 ]] && [[ $7 != "0" ]]; then
nodeSMnumOpenai=$[$7-1]
address=$(jq -r --argjson nodecheck $nodeSMnumOpenai '.v2node | to_entries[] | select(.key == $nodecheck) | .value.domain' /opt/de_GWD/0conf)
tls=$(jq -r --argjson nodecheck $nodeSMnumOpenai '.v2node | to_entries[] | select(.key == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
uuid=$(jq -r --argjson nodecheck $nodeSMnumOpenai '.v2node | to_entries[] | select(.key == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
path=$(jq -r --argjson nodecheck $nodeSMnumOpenai '.v2node | to_entries[] | select(.key == $nodecheck) | .value.path' /opt/de_GWD/0conf)
jq --arg address $address '.v2nodeDIV.nodeSM.openai=$address' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
tag="nodeSMopenai"
routingDomain='["geosite:openai"]'
/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
elif [[ $7 = "0" ]]; then
	jq 'del(.v2nodeDIV.nodeSM.openai)' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
else
address=$(jq -r '.v2nodeDIV.nodeSM.openai' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$')
	if [[ -n $address ]]; then
		tls=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
		uuid=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
		path=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.path' /opt/de_GWD/0conf)
		tag="nodeSMopenai"
		routingDomain='["geosite:openai"]'
		/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
		/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
	fi
fi

if [[ -n $8 ]] && [[ $8 != "0" ]]; then
nodeSMnumApple=$[$8-1]
address=$(
	jq -r --argjson nodecheck $nodeSMnumApple '.v2node | to_entries[] | select(.key == $nodecheck) | .value.domain' /opt/de_GWD/0conf)
tls=$(jq -r --argjson nodecheck $nodeSMnumApple '.v2node | to_entries[] | select(.key == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
uuid=$(jq -r --argjson nodecheck $nodeSMnumApple '.v2node | to_entries[] | select(.key == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
path=$(jq -r --argjson nodecheck $nodeSMnumApple '.v2node | to_entries[] | select(.key == $nodecheck) | .value.path' /opt/de_GWD/0conf)
jq --arg address $address '.v2nodeDIV.nodeSM.apple=$address' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
tag="nodeSMapple"
routingDomain='["geosite:apple","geosite:apple-ads","geosite:apple-dev","geosite:apple-update","geosite:icloud","geosite:apple@cn","geosite:apple-cn"]'
/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
elif [[ $8 = "0" ]]; then
	jq 'del(.v2nodeDIV.nodeSM.apple)' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
	/opt/de_GWD/ui-V2routingDomain 'direct' '["geosite:apple","geosite:apple-ads","geosite:apple-dev","geosite:apple-update","geosite:icloud","geosite:apple@cn","geosite:apple-cn"]'
else
address=$(jq -r '.v2nodeDIV.nodeSM.apple' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$')
	if [[ -n $address ]]; then
		sed -i '/apple.china.conf/d' /opt/de_GWD/smartdns/smartdns.conf && systemctl restart smartdns
		tls=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
		uuid=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
		path=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.path' /opt/de_GWD/0conf)
		tag="nodeSMapple"
		routingDomain='["geosite:apple","geosite:apple-ads","geosite:apple-dev","geosite:apple-update","geosite:icloud","geosite:apple@cn","geosite:apple-cn"]'
		/opt/de_GWD/ui-V2routingDomain $tag $routingDomain
		/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
	fi
fi

if [[ -n $9 ]] && [[ $9 != "0" ]]; then
jq '.v2nodeDIV.nodeSM.steam="proxy"' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
elif [[ $9 = "0" ]]; then
	jq 'del(.v2nodeDIV.nodeSM.steam)' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
	/opt/de_GWD/ui-V2routingDomain 'direct' '["domain:steamserver.net","geosite:steam@cn","geosite:category-games@cn"]'
else
	if [[ -z $(jq -r '.v2nodeDIV.nodeSM.steam' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$') ]]; then
		/opt/de_GWD/ui-V2routingDomain 'direct' '["domain:steamserver.net","geosite:steam@cn","geosite:category-games@cn"]'
	fi
fi

/opt/de_GWD/ui-submitListBWsm

if [[ $2 = "0" ]] && [[ $3 = "0" ]] && [[ $4 = "0" ]] && [[ $5 = "0" ]] && [[ $6 = "0" ]] && [[ $7 = "0" ]] && [[ $8 = "0" ]]; then
	jq '.v2nodeDIV.nodeSM.status="off"' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
else
	jq '.v2nodeDIV.nodeSM.status="on"' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
fi


if [[ $1 = "r" ]]; then
	systemctl restart mosdns
	systemctl restart vtrui
fi

chmod 666 /opt/de_GWD/0conf
