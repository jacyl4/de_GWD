#!/bin/bash
if [[ $(systemctl is-active swap.target) != "active" ]]; then
systemctl unmask swap.target >/dev/null 2>&1
systemctl start swap.target >/dev/null 2>&1
fi

if [[ $(free -m | awk 'NR==3{print$2}') = "0" ]] && [[ $virt_type != "container" ]]; then
if [[ $(df -T / | awk '{print$2}' | tail -n 1) = "btrfs" ]]; then
btrfs subvolume create /swap 2>/dev/null
btrfs filesystem mkswapfile --size 1g --uuid clear /swap/swapfile 2>/dev/null
swapon /swap/swapfile
sed -i "/swapfile/d" /etc/fstab
echo "/swap/swapfile none swap defaults 0 0" >>/etc/fstab
else
fallocate -l 1G /swapfile 2>/dev/null
dd if=/dev/zero of=/swapfile bs=1M count=1024 status=progress 2>/dev/null
chmod 600 /swapfile
mkswap -U clear /swapfile
swapon /swapfile
sed -i "/swapfile/d" /etc/fstab
echo "/swapfile none swap defaults 0 0" >>/etc/fstab
fi
echo "RESUME=" >/etc/initramfs-tools/conf.d/resume
fi

cat << EOF >/etc/apt/apt.conf.d/01InstallLess
APT::Get::Assume-Yes "true";
APT::Install-Recommends "false";
APT::Install-Suggests "false";
EOF

cat << EOF >/etc/apt/apt.conf.d/71debconf
Dpkg::Options {
   "--force-confdef";
   "--force-confold";
};
EOF

sed -i '/ulimit -SHn/d' /etc/profile
sed -i '/ulimit -c/d' /etc/profile
sed -i '/ulimit -d/d' /etc/profile
sed -i '/ulimit -f/d' /etc/profile
sed -i '/ulimit -m/d' /etc/profile
sed -i '/ulimit -s/d' /etc/profile
sed -i '/ulimit -t/d' /etc/profile
sed -i '/ulimit -u/d' /etc/profile
sed -i '/ulimit -v/d' /etc/profile
sed -i '/HISTCONTROL=/d' /etc/profile
sed -i '/alias reboot=/d' /etc/profile
cat << EOF >>/etc/profile
ulimit -SHn 1000000
ulimit -t 65536
ulimit -u 65536
ulimit -c 65536
ulimit -d unlimited
ulimit -f unlimited
ulimit -s unlimited
ulimit -v unlimited

HISTCONTROL=ignoredups
alias reboot="sudo systemctl reboot"
EOF
source /etc/profile

sed -i '/pam_limits.so/d' /etc/pam.d/common-session
echo "session required	pam_limits.so" >>/etc/pam.d/common-session
cat << EOF >/etc/security/limits.conf
root     soft   nofile    1000000
root     hard   nofile    1000000
root     soft   nproc     1000000
root     hard   nproc     1000000
root     soft   core      1000000
root     hard   core      1000000
root     hard   memlock   unlimited
root     soft   memlock   unlimited

www-data     soft   nofile    1000000
www-data     hard   nofile    1000000
www-data     soft   nproc     1000000
www-data     hard   nproc     1000000
www-data     soft   core      1000000
www-data     hard   core      1000000
www-data     hard   memlock   unlimited
www-data     soft   memlock   unlimited

*     soft   nofile    1000000
*     hard   nofile    1000000
*     soft   nproc     1000000
*     hard   nproc     1000000
*     soft   core      1000000
*     hard   core      1000000
*     hard   memlock   unlimited
*     soft   memlock   unlimited
EOF

sed -i '/DefaultLimitCORE/d' /etc/systemd/system.conf
sed -i '/DefaultLimitNOFILE/d' /etc/systemd/system.conf
sed -i '/DefaultLimitNPROC/d' /etc/systemd/system.conf
cat << EOF >>/etc/systemd/system.conf
DefaultLimitCORE=1000000
DefaultLimitNOFILE=1000000
DefaultLimitNPROC=1000000
EOF
systemctl daemon-reload

sed -i '/nf_conntrack/d' /etc/modules-load.d/modules.conf
sed -i '/ifb/d' /etc/modules-load.d/modules.conf
cat << EOF >>/etc/modules-load.d/modules.conf
nf_conntrack
ifb
sch_cake
EOF
modprobe nf_conntrack
modprobe ifb
modprobe sch_cake

cat << EOF >/etc/sysctl.conf
kernel.sysrq = 438
vm.overcommit_memory = 1
vm.swappiness = 5
vm.dirty_ratio = 10
vm.dirty_background_ratio = 5
fs.file-max = 1000000
fs.inotify.max_user_instances = 16384
fs.inotify.max_queued_events = 32768
fs.inotify.max_user_watches = 65536
net.unix.max_dgram_qlen = 2048
net.netfilter.nf_conntrack_acct = 0
net.netfilter.nf_conntrack_checksum = 0
net.netfilter.nf_conntrack_events = 1
net.netfilter.nf_conntrack_timestamp = 0
net.netfilter.nf_conntrack_max = 1048576
net.netfilter.nf_conntrack_buckets = 65536
net.netfilter.nf_conntrack_tcp_loose = 1
net.netfilter.nf_conntrack_tcp_be_liberal = 1
net.netfilter.nf_conntrack_tcp_max_retrans = 3
net.netfilter.nf_conntrack_generic_timeout = 60
net.netfilter.nf_conntrack_tcp_timeout_unacknowledged = 30
net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 30
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 30
net.netfilter.nf_conntrack_tcp_timeout_close_wait = 15
net.netfilter.nf_conntrack_tcp_timeout_close = 5
net.netfilter.nf_conntrack_tcp_timeout_last_ack = 30
net.netfilter.nf_conntrack_tcp_timeout_syn_recv = 30
net.netfilter.nf_conntrack_tcp_timeout_syn_sent = 30
net.netfilter.nf_conntrack_tcp_timeout_established = 3600
net.netfilter.nf_conntrack_sctp_timeout_established = 3600
net.netfilter.nf_conntrack_udp_timeout = 15
net.netfilter.nf_conntrack_udp_timeout_stream = 45
net.core.somaxconn = 65536
net.core.netdev_max_backlog = 262144
net.core.optmem_max = 524288
net.core.rmem_default = 524288
net.core.wmem_default = 524288
net.core.rmem_max = 8388608
net.core.wmem_max = 8388608
net.mptcp.enabled = 1
net.mptcp.path_manager = ndiffports
net.ipv4.neigh.default.gc_thresh1 = 1024
net.ipv4.neigh.default.gc_thresh2 = 2048
net.ipv4.neigh.default.gc_thresh3 = 4096
net.ipv4.conf.all.arp_accept = 0
net.ipv4.conf.default.arp_accept = 0
net.ipv4.conf.all.arp_announce = 2
net.ipv4.conf.default.arp_announce = 2
net.ipv4.conf.all.arp_ignore = 1
net.ipv4.conf.default.arp_ignore = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.all.route_localnet = 1
net.ipv4.route.flush = 1
net.ipv4.ip_local_port_range = 1024 65535
net.ipv4.ip_local_reserved_ports = 53
net.ipv4.ip_forward = 1
net.ipv4.conf.all.forwarding = 1
net.ipv4.conf.default.forwarding = 1
net.ipv4.ip_no_pmtu_disc = 0
net.ipv4.udp_mem = 4096 32768 524288
net.ipv4.udp_rmem_min = 131072
net.ipv4.udp_wmem_min = 131072
net.ipv4.tcp_mem = 16384 131072 1048576
net.ipv4.tcp_rmem = 4096 524288 8388608
net.ipv4.tcp_wmem = 4096 524288 8388608
net.ipv4.tcp_max_tw_buckets = 131072
net.ipv4.tcp_max_orphans = 131072
net.ipv4.tcp_max_syn_backlog = 32768
net.ipv4.tcp_notsent_lowat = 131072
net.ipv4.tcp_limit_output_bytes = 1048576
net.ipv4.tcp_adv_win_scale = 1
net.ipv4.tcp_moderate_rcvbuf = 1
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_workaround_signed_windows = 0
net.ipv4.tcp_mtu_probing = 0
net.ipv4.tcp_mtu_probe_floor = 48
net.ipv4.tcp_base_mss = 1460
net.ipv4.tcp_no_metrics_save = 0
net.ipv4.tcp_no_ssthresh_metrics_save = 0
net.ipv4.tcp_sack = 1
net.ipv4.tcp_dsack = 1
net.ipv4.tcp_frto = 0
net.ipv4.tcp_recovery = 1
net.ipv4.tcp_early_retrans = 3
net.ipv4.tcp_min_rtt_wlen = 120
net.ipv4.tcp_reordering = 3
net.ipv4.tcp_ecn = 0
net.ipv4.tcp_fin_timeout = 10
net.ipv4.tcp_fastopen = 3
net.ipv4.tcp_fastopen_blackhole_timeout_sec = 0
net.ipv4.tcp_fastopen_key = 00000000-00000000-00000000-00000000
net.ipv4.tcp_keepalive_time = 3600
net.ipv4.tcp_keepalive_intvl = 60
net.ipv4.tcp_keepalive_probes = 9
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_syncookies = 0
net.ipv4.tcp_tw_reuse = 2
net.ipv4.tcp_syn_retries = 2
net.ipv4.tcp_synack_retries = 2
net.ipv4.tcp_retries1 = 3
net.ipv4.tcp_retries2 = 8
net.ipv4.tcp_orphan_retries = 0
net.ipv4.tcp_challenge_ack_limit = 100000
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.tcp_retrans_collapse = 0
net.ipv4.tcp_autocorking = 0
net.ipv4.tcp_rfc1337 = 1
net.ipv4.tcp_congestion_control = bbr
net.core.default_qdisc = cake
EOF

sync
sysctl -p >/dev/null 2>&1

dpkg --configure -a
cat << EOF >/etc/apt/sources.list
deb http://cloudfront.debian.net/debian bookworm main contrib non-free non-free-firmware
deb http://cloudfront.debian.net/debian-security bookworm-security main contrib non-free non-free-firmware
deb http://cloudfront.debian.net/debian bookworm-updates main contrib non-free non-free-firmware
deb http://cloudfront.debian.net/debian bookworm-backports main contrib non-free non-free-firmware
EOF
apt update --fix-missing && apt upgrade --allow-downgrades -y
apt full-upgrade -y && apt --purge autoremove -y && apt clean -y && apt autoclean -y

[[ -n $(dpkg -l | awk '{print$2}' | grep '^haveged$') ]] && apt remove --purge haveged
[[ -n $(dpkg -l | awk '{print$2}' | grep '^os-prober$') ]] && apt remove --purge os-prober
[[ -n $(dpkg -l | awk '{print$2}' | grep '^systemd-timesyncd$') ]] && apt remove --purge systemd-timesyncd

unset aptPKG
[[ -z $(dpkg -l | awk '{print$2}' | grep '^sudo$') ]] && aptPKG+=(sudo)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^wget$') ]] && aptPKG+=(wget)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^curl$') ]] && aptPKG+=(curl)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^git$') ]] && aptPKG+=(git)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^locales$') ]] && aptPKG+=(locales)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^ethtool$') ]] && aptPKG+=(ethtool)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^ca-certificates$') ]] && aptPKG+=(ca-certificates)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^apt-transport-https$') ]] && aptPKG+=(apt-transport-https)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^gnupg2$') ]] && aptPKG+=(gnupg2)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^unzip$') ]] && aptPKG+=(unzip)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^jq$') ]] && aptPKG+=(jq)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^rng-tools-debian$') ]] && aptPKG+=(rng-tools-debian)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^chrony$') ]] && aptPKG+=(chrony)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^irqbalance$') ]] && [[ $(nproc --all) -gt 1 ]] && aptPKG+=(irqbalance)
[[ -z $(dpkg -l | awk '{print$2}' | grep '^libmimalloc2.0') ]] && aptPKG+=(libmimalloc2.0)
[[ -n $aptPKG ]] && apt update && apt install $(echo ${aptPKG[@]})

[[ -f "/etc/ld.so.preload" ]] && sed -i "/libjemalloc/d" /etc/ld.so.preload
ldconfig

cat << EOF >/etc/default/rng-tools-debian
# -*- mode: sh -*-
#-
# Configuration for the rng-tools-debian initscript

# Set to the input source for random data, leave undefined
# for the initscript to attempt auto-detection.  Set to /dev/null
# for the viapadlock driver.
#HRNGDEVICE=/dev/hwrng
#HRNGDEVICE=/dev/null
HRNGDEVICE=/dev/urandom

# Additional options to send to rngd. See the rngd(8) manpage for
# more information.  Do not specify -r/--rng-device here, use
# HRNGDEVICE for that instead.
#RNGDOPTIONS="--hrng=intelfwh --fill-watermark=90% --feed-interval=1"
#RNGDOPTIONS="--hrng=viakernel --fill-watermark=90% --feed-interval=1"
#RNGDOPTIONS="--hrng=viapadlock --fill-watermark=90% --feed-interval=1"
# For TPM (also add tpm-rng to /etc/initramfs-tools/modules or /etc/modules):
#RNGDOPTIONS="--fill-watermark=90% --feed-interval=1"

# If you need to configure which RNG to use, do it here:
#HRNGSELECT="virtio_rng.0"
# Use this instead of sysfsutils, which starts too late.
EOF
systemctl restart rng-tools

cat << EOF >/etc/chrony/chrony.conf
server time.cloud.tencent.com iburst
server time4.cloud.tencent.com iburst
server time5.cloud.tencent.com iburst
server ntp.aliyun.com iburst
server ntp6.aliyun.com iburst
server ntp7.aliyun.com iburst

driftfile /var/lib/chrony/chrony.drift
logdir /var/log/chrony
maxupdateskew 100.0
rtcsync
makestep 1 3
leapsectz right/UTC
EOF
systemctl restart chrony
systemctl enable chrony >/dev/null 2>&1

localeSet=`cat << EOF
LANG=en_US.UTF-8
LANGUAGE=en_US.UTF-8
LC_CTYPE="en_US.UTF-8"
LC_NUMERIC="en_US.UTF-8"
LC_TIME="en_US.UTF-8"
LC_COLLATE="en_US.UTF-8"
LC_MONETARY="en_US.UTF-8"
LC_MESSAGES="en_US.UTF-8"
LC_PAPER="en_US.UTF-8"
LC_NAME="en_US.UTF-8"
LC_ADDRESS="en_US.UTF-8"
LC_TELEPHONE="en_US.UTF-8"
LC_MEASUREMENT="en_US.UTF-8"
LC_IDENTIFICATION="en_US.UTF-8"
LC_ALL=en_US.UTF-8
EOF
`
if [[ -z $(locale -a | grep "en_US.utf8") ]]; then
echo "$localeSet" >/etc/default/locale
echo "en_US.UTF-8 UTF-8" >/etc/locale.gen
locale-gen "en_US.UTF-8"
update-locale LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8 LC_ALL=en_US.UTF-8
fi

[[ $(date +"%Z %z") != "CST +0800" ]] && timedatectl set-timezone "Asia/Shanghai"
timedatectl set-local-rtc 0 >/dev/null 2>&1
timedatectl set-ntp true

[[ -f "/etc/rc.local" ]] &&  rm -rf /etc/rc.local

if [[ -n $(systemctl list-unit-files --type=service | grep 'rc_online') ]]; then
systemctl stop rc_online
rm -rf /etc/systemd/system/rc_online.service
systemctl daemon-reload >/dev/null
fi

cat << EOF >/etc/rc_online.local
#!/bin/bash
echo madvise >/sys/kernel/mm/transparent_hugepage/enabled

$(which ip) route show table local | grep -v 'linkdown' | grep -v 'broadcast' | while read line; do
line=\$(echo \$line | awk -F' mtu ' '{print\$1}')
$(which ip) route change \$line mtu 1500 initcwnd 1000 initrwnd 1000 fastopen_no_cookie 1 congctl lock cubic
done

$(which ip) route show table local | grep ' dev lo ' | while read line; do
line=\$(echo \$line | awk -F' mtu ' '{print\$1}')
$(which ip) route change \$line mtu 65520 initcwnd 1000 initrwnd 1000 fastopen_no_cookie 1 congctl lock cubic
done

NIC_local=\$($(which ip) route | grep -v 'linkdown' | grep -v 'broadcast' | grep -v 'scope' | awk -F' dev ' '{print\$2}' | cut -d' ' -f1)
$(which ip) route | grep " dev \$NIC_local " | while read line; do
line=\$(echo \$line | awk -F' mtu ' '{print\$1}')
$(which ip) route change \$line mtu 1500 fastopen_no_cookie 1 congctl lock $(sysctl net.ipv4.tcp_congestion_control | awk -F' = ' '{print$2}')
done



NIC_device=\$(find /sys/class/net ! -type d | xargs --max-args=1 realpath | grep 'device')
for ifb in \$(echo \$NIC_device | xargs -n 1 | grep 'virtual' | awk -F'/' '{print\$NF}' | grep '^ifb'); do
$(which ip) link set \$ifb down
$(which ip) link delete \$ifb
done

$(which ip) link set lo qlen 10000 mtu 65520
$(which tc) qdisc del dev lo root >/dev/null 2>&1
$(which tc) qdisc add dev lo root cake unlimited rtt 10us diffserv4 dual-srchost no-split-gso no-ack-filter raw egress

$(which ip) link add name ifb4lo type ifb >/dev/null 2>&1
$(which tc) qdisc del dev lo ingress >/dev/null 2>&1
$(which tc) qdisc add dev lo handle ffff: ingress
$(which tc) qdisc del dev ifb4lo root >/dev/null 2>&1
$(which tc) qdisc add dev ifb4lo root cake unlimited rtt 10us diffserv4 dual-dsthost no-split-gso no-ack-filter raw ingress
$(which ip) link set ifb4lo qlen 10000 mtu 65520
$(which ip) link set ifb4lo up
$(which tc) filter add dev lo parent ffff: matchall action mirred egress redirect dev ifb4lo

echo \$NIC_device | xargs -n 1 | grep 'virtual' | awk -F'/' '{print\$NF}' | grep -v 'docker' | grep -v 'ifb' | grep -v '^lo\$' | while read line; do
MTU_NUM=\$(< /sys/class/net/\$line/mtu)
ifb4eth=\$(echo "ifb4\$line" | cut -c 1-15)
$(which ip) link set \$line qlen 10001 mtu \$MTU_NUM
$(which tc) qdisc del dev \$line root >/dev/null 2>&1
$(which tc) qdisc add dev \$line root cake unlimited rtt 10us diffserv4 dual-srchost nonat nowash no-split-gso no-ack-filter raw overhead 18 mpu 64 noatm egress

$(which ip) link add name \$ifb4eth type ifb >/dev/null 2>&1
$(which tc) qdisc del dev \$line ingress >/dev/null 2>&1
$(which tc) qdisc add dev \$line handle ffff: ingress
$(which tc) qdisc del dev \$ifb4eth root >/dev/null 2>&1
$(which tc) qdisc add dev \$ifb4eth root cake unlimited rtt 10us diffserv4 dual-dsthost nonat nowash no-split-gso no-ack-filter raw overhead 18 mpu 64 noatm ingress
$(which ip) link set \$ifb4eth qlen 10001 mtu \$MTU_NUM
$(which ip) link set \$ifb4eth up
$(which tc) filter add dev \$line parent ffff: matchall action mirred egress redirect dev \$ifb4eth
done

echo \$NIC_device | xargs -n 1 | grep -v 'virtual' | awk -F'/' '{print\$NF}' | while read line; do
MTU_NUM=\$(< /sys/class/net/\$line/mtu)
ifb4eth=\$(echo "ifb4\$line" | cut -c 1-15)
$(which ip) link set \$line qlen 10001 mtu \$MTU_NUM
$(which tc) qdisc del dev \$line root >/dev/null 2>&1
$(which tc) qdisc add dev \$line root cake unlimited diffserv4 dual-srchost nonat nowash no-split-gso ack-filter ethernet egress

$(which ip) link add name \$ifb4eth type ifb >/dev/null 2>&1
$(which tc) qdisc del dev \$line ingress >/dev/null 2>&1
$(which tc) qdisc add dev \$line handle ffff: ingress
$(which tc) qdisc del dev \$ifb4eth root >/dev/null 2>&1
$(which tc) qdisc add dev \$ifb4eth root cake unlimited diffserv4 dual-dsthost nonat nowash no-split-gso no-ack-filter ethernet ingress
$(which ip) link set \$ifb4eth qlen 10001 mtu \$MTU_NUM
$(which ip) link set \$ifb4eth up
$(which tc) filter add dev \$line parent ffff: matchall action mirred egress redirect dev \$ifb4eth

$(which ethtool) -s \$line duplex full >/dev/null 2>&1
$(which ethtool) -K \$line rx on tx on sg on tso on gso on gro off >/dev/null 2>&1
done

$(which ip) tcp_metrics flush
$(which ip) route flush cache
EOF
chmod +x /etc/rc_online.local

mkdir -p /etc/systemd/system/networking.service.d/
cat << EOF >/etc/systemd/system/networking.service.d/override.conf
[Service]
ExecStartPost=/etc/rc_online.local
EOF
systemctl daemon-reload >/dev/null
/etc/rc_online.local

crontab -l 2>/dev/null >/tmp/now.cron
sed -i '/\/etc\/rc_online.local/d' /tmp/now.cron
cat << EOF >>/tmp/now.cron
EOF
crontab /tmp/now.cron
rm -rf /tmp/now.cron

date -s "$(wget -qSO- --max-redirect=0 aliyun.com 2>&1 | grep Date: | cut -d' ' -f5-8)Z" | grep -v ' 08:00:00 '
[[ $? -ne "0" ]] && date -s "$(wget -qSO- --max-redirect=0 baidu.com 2>&1 | grep Date: | cut -d' ' -f5-8)Z"
hwclock -w
